openapi: 3.0.3
info:
  title: kapon - MiniMaxi API
  version: 1.1.0
servers:
  - url: https://models.kapon.cloud
security:
  - bearerAuth: []
paths:
  /minimaxi/v1/chat/completions:
    post:
      summary: MiniMaxi Chat Completions
      description: 与 OpenAI 兼容的对话接口；kapon 会将 tools.parameters 序列化为字符串以适配 MiniMax。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
      responses:
        '200': { description: 成功 }
  /minimaxi/v1/images/generations:
    post:
      summary: MiniMaxi Images Generations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageGenerationRequest'
      responses:
        '200': { description: 成功 }
  /minimaxi/v1/video_generation:
    post:
      summary: MiniMaxi Video Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MiniMaxVideoCreateRequest'
      responses:
        '200': { description: 成功 }
  /minimaxi/v1/query/video_generation:
    get:
      summary: MiniMaxi Video Query
      parameters:
        - name: task_id
          in: query
          schema: { type: string }
      responses:
        '200': { description: 成功 }
  /minimaxi/v1/t2a_v2:
    post:
      summary: MiniMaxi TTS Sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TtsSyncRequest'
      responses:
        '200': { description: 音频流/链接 }
  /minimaxi/v1/t2a_async_v2:
    post:
      summary: MiniMaxi TTS Async
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TtsAsyncRequest'
      responses:
        '200': { description: 含 task_id 的 JSON }
  /minimaxi/v1/query/t2a_async_query_v2:
    get:
      summary: MiniMaxi TTS Async Query
      parameters:
        - name: task_id
          in: query
          schema: { type: string }
      responses:
        '200': { description: 成功 }
  /minimaxi/v1/files/retrieve:
    get:
      summary: MiniMaxi File Retrieve
      parameters:
        - name: file_id
          in: query
          schema: { type: string }
      responses:
        '200': { description: 成功 }
  /minimaxi/v1/files/retrieve_content:
    get:
      summary: MiniMaxi File Retrieve Content
      parameters:
        - name: file_id
          in: query
          schema: { type: string }
      responses:
        '200': { description: 成功 }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ChatMessage:
      type: object
      required: [role, content]
      properties:
        role: { type: string, enum: [system, user, assistant, tool] }
        content: { type: string }
    ToolFunction:
      type: object
      properties:
        name: { type: string }
        description: { type: string }
        parameters: { type: object }
    Tool:
      type: object
      properties:
        type: { type: string, enum: [function] }
        function:
          $ref: '#/components/schemas/ToolFunction'
    ChatCompletionRequest:
      type: object
      required: [model, messages]
      properties:
        model: { type: string, example: abab6.5-chat }
        messages:
          type: array
          items: { $ref: '#/components/schemas/ChatMessage' }
        tools:
          type: array
          items: { $ref: '#/components/schemas/Tool' }
        stream: { type: boolean }
    ImageGenerationRequest:
      type: object
      required: [model, prompt]
      properties:
        model: { type: string, example: abab6.5-vision }
        prompt: { type: string }
        size: { type: string, example: 1024x1024 }
        n: { type: integer, example: 1 }
    MiniMaxVideoCreateRequest:
      type: object
      required: [model, prompt]
      properties:
        model: { type: string, example: MiniMax-Hailuo-02 }
        prompt: { type: string }
        seconds: { type: integer, example: 6 }
        size: { type: string, example: 1280x720 }
        images:
          type: array
          items: { type: string, format: uri }
        input_reference: { type: string, format: uri }
        callback_url: { type: string, format: uri }
    TtsSyncRequest:
      type: object
      required: [model, text]
      properties:
        model: { type: string, example: speech-2.5-hd-preview }
        text: { type: string }
        voice_id: { type: string, example: alloy }
        emotion: { type: string, example: happy }
        format: { type: string, example: mp3 }
    TtsAsyncRequest:
      type: object
      required: [model, text]
      properties:
        model: { type: string }
        text: { type: string }
